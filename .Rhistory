gsub("\t","",jerseys)
jerseys=gsub("\t","",jerseys)
head(jerseys)
jerseys=gsub("\n","",jerseys)
head(jerseys)
jerseys=gsub("\r","",jerseys)
head(jerseys)
length(jerseys)
jerseys=as.numeric(jerseys)
head(jerseys)
jerseys
fileURL="http://wentworthathletics.com/sports/mice/2013-14/roster"
doc=htmlTreeParse(fileURL,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
jerseys=xpathSApply(doc,"//td[@class='number']",xmlValue)
head(jerseys)
jerseys=gsub("\t|\n|\r","",jerseys)
jerseys=as.numeric(jerseys)
head(jerseys)
241*2/5
(241*2/5)^.5
install.packages("XML")
library(XML)
fileURL="http://wentworthathletics.com/sports/mice/2013-14/roster"
doc=htmlTreeParse(fileURL,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
jerseys=xpathSApply(doc,"//td[@class='number']",xmlValue)
jerseys=gsub("\t|\n|\r","",jerseys)
jerseys=as.numeric(jerseys)
head(jerseys)
length(jerseys)
jerseys=xpathSApply(doc,"//td[@class='data-title']",xmlValue)
jerseys=gsub("\t|\n|\r","",jerseys)
jerseys=as.numeric(jerseys)
head(jerseys)
length(jerseys)
jerseys=xpathSApply(doc,"//td[@class='number']",xmlValue)
jerseys=xpathSApply(doc,"//td[@class='data-title']",xmlValue)
jerseys=as.numeric(jerseys)
head(jerseys)
length(jerseys)
jerseys=xpathSApply(doc,"//td[@class='data-title']",xmlValue)
jerseys=xpathSApply(doc,"//td[@data-title='No.']",xmlValue)
jerseys=as.numeric(jerseys)
head(jerseys)
length(jerseys)
jerseys=xpathSApply(doc,"//td[@data-title='No.']",xmlValue)
head(jerseys)
jerseys=as.numeric(jerseys)
head(jerseys)
fileURL="http://wentworthathletics.com/sports/mice/2013-14/roster"
doc=htmlTreeParse(fileURL,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
jerseys=xpathSApply(doc,"//td[@data-title='No.']",xmlValue)
head(jerseys)
jerseys=as.numeric(jerseys)
head(jerseys)
length(jerseys)
install.packages("RMySQL")
source('~/.active-rstudio-document')
ucscDb=dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result=dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
?dbConnect
install.packages("dbConnect")
ucscDb=dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
ucscDb=dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
library(dbConnect)
ucscDb=dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result=dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
?dbConnect
hg19=dbConnect(MySQL(),user="genome",db="hg19"
host="genome-mysql.cse.ucsc.edu")
allTables=dbListTables(hg19)
hg19=dbConnect(MySQL(),user="genome",db="hg19",
host="genome-mysql.cse.ucsc.edu")
allTables=dbListTables(hg19)
length(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
bGetQuery(hg19,"select count(*) from affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
query=dbSendQuery(hg19,"select* from affyU133Plus2 where misMatches between1 and 3")
affyMiss=fetch(query);
query=dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affyMiss=fetch(query);
length(affyMiss)
dbClearResult(query)
length(affiMis)
length(affyMis)
length(affyMiss)
dbDisconnect(hg19)
length(affyMiss)
mypets=dbConnect(MySQL(),user="root",
host="localhost")
mypets=dbConnect(MySQL(),user="root",
host="localhost8889")
host="localhost8889/DatabaseGrace/mypets")
host="localhost8889/DatabaseGrace")
mypets=dbConnect(MySQL(),user="root",
host="localhost8889/DatabaseGrace")
source("http://bioconductor.org/bioLite.R")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created=h5createFile("example.h5")
created
h5createGroup("example.h5","foo")
h5createGroup("example.h5","baa")
h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
A=matrix(1:10,nr=5,nc=2)
h5write(A,"example.h5","foo/A")
B=array(seq(0.1,2.0,by=.1),dim(5,2,2))
)
B=array(seq(0.1,2.0,by=.1),dim(c(5,2,2)))
B=array(seq(0.1,2.0,by=.1),dimc(5,2,2))
B=array(seq(0.1,2.0,by=.1),dim=c(5,2,2))
attr(B,"scale")="liter"
h5write(B,"example.h5","foo/foobaa/B")
h5ls("example.h5")
df=data.frame(1L:5L,seq(0,1), length.out=5)
df=data.frame(1L:5L,seq(0,1,length.out=5)
df=data.frame(1L:5L,seq(0,1,length.out=5))
df=data.frame(1L:5L,seq(0,1,length.out=5))
df=data.frame(1L:5L,seq(0,1,length.out=5),
c("ab","cde","fghi","a","s".stringsAsFactors=FALSE)
df=data.frame(1L:5L,seq(0,1,length.out=5),
c("ab","cde","fghi","a","s"),stringsAsFactors=FALSE)
h5write(df,"example.h5","df")
h5ls("example.h5")
readA=h5read("example.h5","foo/A")
readB=h5read("example.h5","foo/foobaa/B")
readdf=h5read("example.h5","df")
A==readA
readdf==df
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
A==readA
readA=h5read("example.h5","foo/A")
A==readA
mypets=dbConnect(MySQL(),user="root",
host="localhost/DatabaseGrace")
mypets=dbConnect(MySQL(),user="root",
host="localhost:8889/DatabaseGrace")
mypets=dbConnect(MySQL(),user="root",
host="localhost:DatabaseGrace")
mypets=dbConnect(MySQL(),user="root",
host="localhost8889")
mypets=dbConnect(MySQL(),user="root",
host="localhost:8889")
mypets=dbConnect(MySQL(),user="root",
host="localhost/DatabaseGrace")
mypets=dbConnect(MySQL(),user="root",
host="localhost:DatabaseGrace")
mypets=dbConnect(MySQL(),user="root",
host="localhost")
mypets=dbConnect(MySQL(),user="root",
host="localhost:8889")
mypets=dbConnect(MySQL(),user="root",
host="localhost/8889")
mypets=dbConnect(MySQL(),user="root",
host="localhost8889")
mypets=dbConnect(MySQL(),user="root",
host="localhost:3306")
mypets=dbConnect(MySQL(),user="root",
host="localhost3306")
mypets=dbConnect(MySQL(),user="root",
host="localhost/3306")
mypets=dbConnect(MySQL(),user="root",
host="localhost")
install.packages("RMySQL")
install.packages("dbConnect")
library(dbConnect)
mypets=dbConnect(MySQL(),user="root",
host="localhost")
mypets=dbConnect(MySQL(),user="root",
host="databasegrace")
mypets=dbConnect(MySQL(),user="root",
host="localhost",unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace"
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
getwd()
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="gorgas2006"
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="gorgas2006",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="gorgas",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="jurgen",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="root",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
mypets
allTables=dbListTables(DatabaseGrace)
allTables=dbListTables("DatabaseGrace")
result=dbGetQuery(localhost,"show databases;");dbDisconnect(localhost);
result=dbGetQuery(root,"show databases;");dbDisconnect(root);
result=dbGetQuery(mypets,"show databases;");dbDisconnect(mypets);
dbGrace=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="root",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
result=dbGetQuery(dbGrace,"show databases;");dbDisconnect(dbGrace);
allTables=dbListTables(dbGrace)
result
dbListFields(DatabaseGrace,"mypets")
dbGrace=dbConnect(MySQL(),user="root",
host="localhost/DatabaseGrace",
password="root",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
dbGrace=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="root",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
result=dbGetQuery(dbGrace,"show databases;");dbDisconnect(dbGrace);
dbGrace=dbConnect(MySQL(),user="root",
host="localhost",
dbname="DatabaseGrace",
password="root",
unix.sock="/Applications/MAMP/tmp/mysql/mysql.sock")
result=dbGetQuery(dbGrace,"show databases;");dbDisconnect(dbGrace);
result
allTables=dbListTables(dbGrace)
56000/9*12
56000/9*12*1.1
myapp=oath_app("twitter",
#APIkey=Consumerkey
key="RW5UgOBGBjIlnBxV5kYTuuZSu",
#Consumersecret=APIsecret
secret="yogFvHsEdfQ5tqcz7jBQGY7TcTlQfNEPcc1z3AzpKb4Rtc9mGf",
)
library(httr)
myapp=oath_app("twitter",
#APIkey=Consumerkey
key="RW5UgOBGBjIlnBxV5kYTuuZSu",
#Consumersecret=APIsecret
secret="yogFvHsEdfQ5tqcz7jBQGY7TcTlQfNEPcc1z3AzpKb4Rtc9mGf",
)
myapp=oauth_app("twitter",
#APIkey=Consumerkey
key="RW5UgOBGBjIlnBxV5kYTuuZSu",
#Consumersecret=APIsecret
secret="yogFvHsEdfQ5tqcz7jBQGY7TcTlQfNEPcc1z3AzpKb4Rtc9mGf",
)
myapp=oauth_app("twitter",
#APIkey=Consumerkey
key="RW5UgOBGBjIlnBxV5kYTuuZSu",
#Consumersecret=APIsecret
secret="yogFvHsEdfQ5tqcz7jBQGY7TcTlQfNEPcc1z3AzpKb4Rtc9mGf"
)
sig=sign_pauth1.0(myapp,
token="1687360747-gSWLXW1nEIpDr6HLMMpcu6ZbtLsAzSH2Fo8J11x",
token_secret="Rm2wS9JEkHtwCMZVudcjcX04pAI0QCl0bJOzgjVi3zrwo"
)
sig=sign_oauth1.0(myapp,
token="1687360747-gSWLXW1nEIpDr6HLMMpcu6ZbtLsAzSH2Fo8J11x",
token_secret="Rm2wS9JEkHtwCMZVudcjcX04pAI0QCl0bJOzgjVi3zrwo"
)
homeTL=GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
head(homeTL)
json1=content(homeTL)#recognizes that this is json data
library(jsonlite)
install.pachages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
json1=content(homeTL)#recognizes that this is json data
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
myapp=oauth_app("Github",
key="eafb99771bbd27696303",
secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a"
)
sig=sign_oauth1.0(myapp,
token="eafb99771bbd27696303",
token_secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a"
)
homeTL=GET("https://api.github.com/users/jtleek/repos",sig)
head(homeTL)
homeTL$date
json1=content(homeTL)#recognizes that this is json data
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
head(json2)
json2
stop_for_status(homeTL)
homeTL=GET("https://api.github.com/users/jtleek/repos",sig)
stop_for_status(homeTL)
content(homeTL)
github_token <- oauth2.0_token(
oauth_endpoints("Github"),
myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", "eafb99771bbd27696303")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "eafb99771bbd27696303")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
\library(httpuv)
library(httpuv)
install.packages("httpuv")
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "eafb99771bbd27696303")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
oauth_endpoints("github")
myapp <- oauth_app("github", "eafb99771bbd27696303")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "eafb99771bbd27696303",secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <-  sign_oauth1.0("github", "eafb99771bbd27696303"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", "eafb99771bbd27696303"
)
myapp <-  sign_oauth1.0("github", "eafb99771bbd27696303"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "eafb99771bbd27696303",
secret="NULL"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "eafb99771bbd27696303",
secret=NULL
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", "eafb99771bbd27696303"
)
myapp <-  sign_oauth1.0("github", "eafb99771bbd27696303"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
stop_for_status(req)
myapp=oauth_app("Github",
key="eafb99771bbd27696303",
secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a"
)
sig=sign_oauth1.0(myapp,
token="eafb99771bbd27696303",
token_secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a"
)
library(httr)
install.packages("httpuv")
install.packages("httpuv")
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "eafb99771bbd27696303",
secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a"
)
myapp <-  sign_oauth1.0("github", "eafb99771bbd27696303"
)
myapp <- oauth_app("github", "eafb99771bbd27696303",
secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", "eafb99771bbd27696303",
secret="811e8caa4b1d3e21fbb69a38eef7dbe94b95657a"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("~/Dropbox/Coursera_DataAnalysisR/3GettingCleaningData/CourseWork/ActivityDataWearableTechnology")
features=read.table("UCIHAR_Dataset/features.txt")
f=features[,2]
extract=grep("mean|std",f)
subjecttest=read.table("UCIHAR_Dataset/test/subject_test.txt")
colnames(subjecttest)="id"
activitytest=read.table("UCIHAR_Dataset/test/Y_test.txt")
colnames(activitytest)="Activity_Labels"
testdata=read.table("UCIHAR_Dataset/test/X_test.txt")
colnames(testdata)=f
test=testdata[,extract]
subjecttrain=read.table("UCIHAR_Dataset/train/subject_train.txt")
colnames(subjecttrain)="id"
activitytrain=read.table("UCIHAR_Dataset/train/Y_train.txt")
colnames(activitytrain)="Activity_Labels"
traindata=read.table("UCIHAR_Dataset/train/X_train.txt")
colnames(traindata)=f
train=traindata[,extract]
data1=subjecttest
data1[,2]=activitytest
data1[,3:81]=test
data2=subjecttrain
data2[,2]=activitytrain
data2[,3:81]=train
library(plyr)
data=arrange(merge(data1,data2,all=T),id)
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,id),mean)
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,data$id),mean)
Activity=aggregatedata[,1]
finaldata=as.data.frame(Activity)
finaldata[,2:80]=aggregatedata[,4:82]
actlab=read.table("UCIHAR_Dataset/activity_labels.txt")
al=as.character(actlab[,2])
for (i in 1:6) {
finaldata$Activity[finaldata$Activity==i]=al[i]
}
colnames(finaldata)
write.table(finaldata,file="CleanActivity.txt",row.name=F)
?aggregate
dim(aggregatedata)#=6x82
aggregatedata[1:3,1:3]
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,ID=data$id),mean)
dim(aggregatedata)#=6x82, now 180x83
aggregatedata[1:3,1:3]
aggregatedata[1:3,1:8]
aggregatedata[1:8,1:3]
aggregatedata=aggregate(data,by=list(data$Activity_Labels,data$id),mean)
dim(aggregatedata)#=6x82, now 180x83
aggregatedata[1:8,1:3]
aggregatedata[30:38,1:3]
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,ID=data$id),mean)
dim(aggregatedata)#=6x82, now 180x83
aggregatedata[30:38,1:3]
Activity=aggregatedata[,1]
finaldata=as.data.frame(Activity)
head(finaldata)
dim(finaldata)#=6x1
dim(finaldata)#=6x1
aggregatedata[1:3,2:5]
dim(aggregatedata)#=6x82, now 180x83
finaldata[,2:81]=aggregatedata[,4:83]
dim(finaldata)
aggregatedata[1:3,2:5]#Stuff we want to attach starts in column 4
aggregatedata[30:38,1:3]
aggregatedata[30:38,1:4]
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,ID=data$id),mean)
aggregatedata[30:38,1:4]
aggregatedata[30:38,1:5]
dim(aggregatedata)#=180x83
Activity=aggregatedata[,1]
finaldata=as.data.frame(Activity)
dim(finaldata)#=180x1
finaldata[,3:81]=aggregatedata[,5:83]
dim(finaldata)#=180x1
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,ID=data$id),mean)
Activity=aggregatedata[,1]
finaldata=as.data.frame(Activity)
aggregatedata[30:38,1:5]#Stuff we want to attach starts in column 5
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,ID=data$id),mean)
Activity=aggregatedata[,1]
ID=aggregatedata[,2]
finaldata=as.data.frame(Activity,ID)
head(finaldata)
dim(finaldata)#=180x1
aggregatedata=aggregate(data,by=list(Activity=data$Activity_Labels,ID=data$id),mean)
Activity=aggregatedata[,1]
ID=aggregatedata[,2]
finaldata=as.data.frame(Activity)
finaldata[,2]=ID
head(finaldata)
dim(finaldata)#=180x1
finaldata[30:38,]
colnames(finaldata)=c("Activity","ID")
head(finaldata)
finaldata[,3:81]=aggregatedata[,5:83]
dim(finaldata)
aggregatedata[30:38,1:5]#Stuff we want to attach starts in column 5
dim(finaldata)
actlab=read.table("UCIHAR_Dataset/activity_labels.txt")
al=as.character(actlab[,2])
for (i in 1:6) {
finaldata$Activity[finaldata$Activity==i]=al[i]
}
finaldata[1:3,1:2]
finaldata[1:3,1:4]
finaldata[1:3,1:3]
finaldata[35:38,1:3]
finaldata$Activity
colnames(finaldata)
write.table(finaldata,file="CleanActivity.txt",row.name=F)
